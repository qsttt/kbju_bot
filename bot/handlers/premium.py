from __future__ import annotations

from datetime import datetime, timezone
from typing import Optional

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy import select

from core.db import SessionLocal
from core.models import User

router = Router()


# ---------- helpers ----------

def _remaining_str(until: Optional[datetime]) -> str:
    if not until:
        return "–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏"
    now = datetime.utcnow()
    if until <= now:
        return "–∏—Å—Ç–µ–∫–ª–∞"
    delta = until - now
    days = delta.days
    hours = delta.seconds // 3600
    if days >= 1:
        return f"{days} –¥–Ω. {hours} —á."
    mins = (delta.seconds % 3600) // 60
    return f"{hours} —á. {mins} –º–∏–Ω."


def _premium_kb(show_trial: bool) -> InlineKeyboardMarkup:
    buttons = []
    if show_trial:
        buttons.append([InlineKeyboardButton(text="üéÅ 10 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ", callback_data="prem:trial")])
    buttons.append([InlineKeyboardButton(text="–û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–µ–º–∏—É–º ‚Äî 249 ‚ÇΩ", callback_data="prem:buy")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


async def _trial_available(u: User) -> bool:
    # –¢—Ä–∏–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Ä–∞–Ω–µ–µ.
    # –ü–æ–ª–µ –º–æ–∂–µ—Ç –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è –ø–æ-—Ä–∞–∑–Ω–æ–º—É ‚Äî –ø–æ–¥—Å—Ç—Ä–∞—Ö—É–µ–º—Å—è —á–µ—Ä–µ–∑ getattr.
    return not bool(getattr(u, "trial_activated", False))


# ---------- handlers ----------

@router.message(Command("premium"))
async def premium_menu(msg: Message):
    async with SessionLocal() as session:
        u = (await session.execute(select(User).where(User.tg_id == msg.from_user.id))).scalar_one()

    left = _remaining_str(u.premium_until)
    show_trial = await _trial_available(u)

    text = (
        "–ü—Ä–µ–º–∏—É–º: –∏—Å—Ç–æ—Ä–∏—è 90 –¥–Ω–µ–π, weekly recap, –∏–∑–±—Ä–∞–Ω–Ω–æ–µ/—á–∞—Å—Ç—ã–µ, —Ñ–æ—Ç–æ-—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞.\n\n"
        f"–°—Ç–∞—Ç—É—Å: {left}\n"
    )
    await msg.answer(text, reply_markup=_premium_kb(show_trial))


# —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º –∏–º–ø–æ—Ä—Ç–æ–º –∏–∑ menu.py (–µ—Å–ª–∏ —Ç–∞–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è cmd_premium)
async def cmd_premium(message: Message):
    return await premium_menu(message)


# --- –∑–∞–≥–ª—É—à–∫–∏ –ø–æ–¥ –∫–æ–ª–ª–±–µ–∫–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –∏—Ö –µ—â—ë –Ω–µ—Ç –≤ —Ç–≤–æ—ë–º —Ñ–∞–π–ª–µ, –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–∫) ---

@router.callback_query(F.data == "prem:trial")
async def activate_trial(call):
    async with SessionLocal() as session:
        u = (await session.execute(select(User).where(User.tg_id == call.from_user.id))).scalar_one()
        # –µ—Å–ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω ‚Äî –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–∏–º —ç–∫—Ä–∞–Ω
        if getattr(u, "trial_activated", False):
            await call.answer("–ü—Ä–æ–±–Ω—ã–π —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —Ä–∞–Ω—å—à–µ", show_alert=True)
        else:
            # 10 –¥–Ω–µ–π —Ç—Ä–∏–∞–ª–∞
            u.premium_until = datetime.utcnow() + timedelta(days=10)
            # –æ—Ç–º–µ—Ç–∏–º, —á—Ç–æ —Ç—Ä–∏–∞–ª –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω
            if hasattr(u, "trial_activated"):
                setattr(u, "trial_activated", True)
            await session.commit()
            await call.answer("–ü—Ä–æ–±–Ω—ã–π –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ 10 –¥–Ω–µ–π!")
    # –ø–µ—Ä–µ—Ä–∏—Å—É–µ–º —ç–∫—Ä–∞–Ω
    await premium_menu(call.message)


@router.callback_query(F.data == "prem:buy")
async def buy_premium(call):
    # —Ç—É—Ç –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ (—Å—Å—ã–ª–∫–∞ –ÆKassa) ‚Äî –æ—Å—Ç–∞–≤–ª—è—é –∫—Ä–∞—Ç–∫—É—é –∑–∞–≥–ª—É—à–∫—É
    await call.answer()
    await call.message.edit_text(
        "–û—Ñ–æ—Ä–º–ª—è–µ–º –ø—Ä–µ–º–∏—É–º –∑–∞ 249 ‚ÇΩ\n–ü–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:",
    )
    # –µ—Å–ª–∏ —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –≥–æ—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è create_payment_link(...) ‚Äî –ø—Ä–æ—Å—Ç–æ –≤—ã–∑–æ–≤–∏ –µ—ë –∏ –ø–æ–¥—Å—Ç–∞–≤—å URL
